{"version":3,"sources":["game/game.js","utils/constants.js","styles/componentStyles.js","components/Buttons.js","containers/Controls.js","components/Cell.js","components/Row.js","components/Grid.js","containers/Grid.js","reducers/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["countNeighbors","grid","coords","dimensions","rows","columns","sum","y","x","determineNewStatus","oldCell","neighbors","exports","createGrid","row","push","generateNewGrid","oldGrid","newCell","ADVANCE_COLUMN","GAME_INIT","GAME_PAUSE","CELL_CLICK","RESET","MUTE","SPEED_UP","SPEED_DOWN","Game","styled","div","Board","ButtonPanel","Buttons","playing","stop","start","reset","toggleMute","isMuted","speedUp","speedDown","className","onClick","speed","connect","state","notes","soundBoard","Boolean","interval","mute","dispatch","type","setInterval","Cell","cell","currentColumn","toggleCell","classes","Row","map","GridComponent","synth","Tone","PolySynth","Synth","volume","Volume","chain","Master","StartAudioContext","context","then","console","log","catch","initialState","reducer","action","clearInterval","newGrid","slice","nextColumn","note","active","length","filter","a","triggerAttackRelease","store","createStore","App","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e82bbc5.chunk.js","sourcesContent":["\nconst countNeighbors = (grid, coords, dimensions) => {\n  const { rows, columns } = dimensions;\n  let sum = 0 - grid[coords.y][coords.x];\n  for (let y = -1; y < 2; y += 1) {\n    for (let x = -1; x < 2; x += 1) {\n      sum += grid[(y + coords.y + columns) % columns][(x + coords.x + rows) % rows];\n    }\n  }\n  return sum;\n};\n\nexports.createGrid = (dimensions) => {\n  const { rows, columns } = dimensions;\n  const grid = [];\n  for (let y = 0; y < rows; y += 1) {\n    const row = [];\n    for (let x = 0; x < columns; x += 1) {\n      row.push(0);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\n\n// Any live cell with fewer than two live neighbours dies, as if caused by underpopulation.\n// Any live cell with two or three live neighbours lives on to the next generation.\n// Any live cell with more than three live neighbours dies, as if by overpopulation.\n// Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\nexports.generateNewGrid = (oldGrid, dimensions) => {\n  const { rows, columns } = dimensions;\n  const grid = [];\n  for (let y = 0; y < rows; y += 1) {\n    const row = [];\n    for (let x = 0; x < columns; x += 1) {\n      const neighbors = countNeighbors(oldGrid, { x, y }, dimensions);\n      const oldCell = oldGrid[y][x];\n\n      const newCell = determineNewStatus(oldCell, neighbors);\n\n      row.push(newCell);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\n\nfunction determineNewStatus(oldCell, neighbors) {\n  if (oldCell) {\n    if (neighbors < 2) {\n      return 0;\n    }\n    if (neighbors === 2 || neighbors === 3) {\n      return 1;\n    }\n    return 0;\n  }\n  if (neighbors === 3) {\n    return 1;\n  }\n  return 0;\n}\n","\nexport const ADVANCE_COLUMN = 'ADVANCE_COLUMN';\nexport const GAME_INIT = 'GAME_INIT';\nexport const GAME_PAUSE = 'GAME_PAUSE';\nexport const CELL_CLICK = 'CELL_CLICK';\nexport const RESET = 'RESET';\nexport const MUTE = 'MUTE';\nexport const SPEED_UP = 'SPEED_UP';\nexport const SPEED_DOWN = 'SPEED_DOWN';\n","import styled from 'styled-components';\n\nexport const Game = styled.div`\n  margin: auto;\n  max-width: 40vw;\n  font-size: 1.5rem;\n\n`;\n\n\nexport const Board = styled.div`\n  height: 40vw;\n\n  .row {\n    height: 6.25%;\n  }\n  .cell {\n    display: inline-block;\n    width: 6.25%;\n    height: 100%;\n    border: 1px solid pink;\n    background: #F4F4F4;\n    &.active {\n      background: #7f265f;\n      &.playing { animation: trip .2s infinite; }\n    }\n  }\n  .playing { background: #d0f1d0; }\n  @keyframes trip {\n    100% { background-color: #53c94f; }\n  }\n`;\n\nexport const ButtonPanel = styled.div`\n  height: 50%;\n  padding-top: .5rem;\n    &:hover { cursor: pointer; }\n\n  \n`;\n","import React from 'react';\nimport { ButtonPanel } from '../styles/componentStyles';\n\nconst Buttons = ({ playing, stop, start, reset, toggleMute, isMuted, speedUp, speedDown }) => (\n  <ButtonPanel>\n    <div className=\"ph3 br-pill br-4 light-gray bg-black w-5\">\n      <i className={`fas ${playing ? 'fa-pause-circle' : 'fa-play-circle'} pointer mr2`} onClick={playing ? stop : start} />\n      <i className={`fas mr2 fa-trash-alt`} onClick={playing ? null : reset} />\n      <i className={`fas  mr2 ${isMuted ? 'fa-volume-off' : 'fa-volume-up'}`} onClick={toggleMute} />\n      <i className=\"fas mr2 fa-fast-backward\" onClick={speedDown} ></i>\n      <i className=\"fas mr2 fa-fast-forward\" onClick={speedUp}></i>\n    </div>\n\n  </ButtonPanel>\n);\n\nexport default Buttons;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { GAME_INIT, GAME_PAUSE, ADVANCE_COLUMN, RESET, MUTE, SPEED_DOWN, SPEED_UP } from '../utils/constants';\n\nimport ControlsComponent from '../components/Buttons';\n\nlet speed = 200\n\nconst Controls = ({\n  playing, start, stop, reset, toggleMute, isMuted, speedUp, speedDown\n}) => (\n  <ControlsComponent\n    playing={playing}\n    start={start}\n    stop={stop}\n    reset={reset}\n    toggleMute={toggleMute}\n    isMuted={isMuted}\n    speedDown={speedDown}\n    speedUp={speedUp}\n  />\n);\n\n\nconst mapStateToProps = state => ({\n  notes: state.soundBoard.notes,\n  playing: Boolean(state.interval),\n  isMuted: state.soundBoard.mute,\n});\n\nfunction reduceSpeed() {\n  if (speed < 800) {\n    speed = speed + 40;\n  }\n  return speed;\n}\n\nfunction incrementSpeed() {\n  if (speed > 40) {\n    speed = speed - 40\n  }\n  return speed;\n}\n\nconst mapDispatchToProps = dispatch => ({\n\n  start: () => dispatch({\n    type: GAME_INIT,\n    interval: setInterval(() => dispatch({ type: ADVANCE_COLUMN }), speed),\n  }),\n  stop: () => dispatch({ type: GAME_PAUSE }),\n  reset: () => dispatch({ type: RESET }),\n  toggleMute: () => dispatch({ type: MUTE }),\n  speedUp: () => dispatch({\n    type: SPEED_UP,\n    interval: setInterval(() => dispatch({ type: ADVANCE_COLUMN }), incrementSpeed()),\n  }),\n  speedDown: () => dispatch({\n    type: SPEED_DOWN,\n    interval: setInterval(() => dispatch({ type: ADVANCE_COLUMN }), reduceSpeed()),\n  }),\n\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Controls);\n","\nimport React from 'react';\n\nconst Cell = ({\n  cell, currentColumn, playing, toggleCell, x, y,\n}) => {\n  let classes = 'cell';\n  if (cell) classes += ' active';\n  if (currentColumn === x) classes += ' playing';\n  if (!playing) classes += ' pointer';\n\n  return !playing\n    ? (<div\n      className={classes}\n      onClick={toggleCell(x, y)}\n    />)\n    : <div className={classes} />;\n};\n\nexport default Cell;\n","import React from 'react';\n\nimport Cell from './Cell';\n\nconst Row = ({ row, currentColumn, toggleCell, playing, y }) => {\n  return (\n    <div className=\"row\">\n      {\n        row.map((cell, x) => (\n          <Cell\n            cell={cell}\n            currentColumn={currentColumn}\n            playing={playing}\n            toggleCell={toggleCell}\n            y={y}\n            x={x}\n          />\n        ))\n      }\n    </div>\n  )\n};\n\nexport default Row;\n","import React from 'react';\nimport { Board } from '../styles/componentStyles';\nimport Row from './Row';\n\n\nconst GridComponent = ({ grid, currentColumn, playing, toggleCell }) => (\n  <Board className=\"ba o-90 shadow-2 b--dark-pink bw4\" >\n    {\n      grid.map((row, y) => (\n        <Row\n          row={row}\n          currentColumn={currentColumn}\n          playing={playing}\n          toggleCell={toggleCell}\n          y={y}\n        />\n      ))\n    }\n  </Board>\n);\n\nexport default GridComponent;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport GridComponent from '../components/Grid';\n\nimport { CELL_CLICK } from \"../utils/constants\";\n\nconst Grid = ({ grid, currentColumn, playing, toggleCell }) => (\n  <GridComponent\n    grid={grid}\n    currentColumn={currentColumn}\n    playing={playing}\n    toggleCell={toggleCell}\n  />\n);\n\nconst mapStateToProps = state => ({\n  grid: state.grid,\n  currentColumn: state.currentColumn,\n  playing: Boolean(state.interval),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCell: (x, y) => () => dispatch({ type: CELL_CLICK, x, y }),\n\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Grid);\n","import {\n  ADVANCE_COLUMN,\n  GAME_INIT,\n  GAME_PAUSE,\n  CELL_CLICK,\n  RESET,\n  MUTE,\n  SPEED_DOWN,\n  SPEED_UP,\n} from '../utils/constants';\n\nimport StartAudioContext from 'startaudiocontext';\nimport Tone from 'tone';\n\nimport Game from '../game/game';\n\nconst synth = new Tone.PolySynth(16, Tone.Synth);\nconst volume = new Tone.Volume(-16);\nsynth.chain(volume, Tone.Master);\nvolume.mute = false;\nStartAudioContext(synth.context, '#root')\n  .then(() => console.log('iniciar audio'))\n  .catch(() => console.log('error'));\n\n\nconst initialState = {\n  grid: Game.createGrid({ rows: 16, columns: 16 }),\n  currentColumn: -1,\n  interval: null,\n  dimensions: { rows: 16, columns: 16 },\n  soundBoard: {\n    notes: ['C6', 'A5', 'G5', 'E5', 'D5', 'C5', 'A4', 'G4', 'E4', 'D4', 'C4', 'A3', 'G3', 'E3', 'D3', 'C3'],\n    mute: false,\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GAME_INIT:\n      return {\n        ...state,\n        interval: action.interval,\n      };\n    case GAME_PAUSE:\n      return {\n        ...state,\n        interval: clearInterval(state.interval),\n      };\n    case CELL_CLICK:\n      const newGrid = state.grid.slice();\n      newGrid[action.y][action.x] = 1\n      return {\n        ...state,\n        grid: newGrid,\n      };\n    case ADVANCE_COLUMN:\n      const nextColumn = (state.currentColumn + 1) % state.dimensions.columns;\n      const notes = state.grid.map((row, y) => {\n        const note = state.soundBoard.notes;\n        return {\n          active: row[state.currentColumn],\n          note: note[y % note.length],\n        };\n      })\n        .filter(a => a.active)\n        .map(a => a.note);\n\n      synth.triggerAttackRelease(notes, 0.2);\n\n      return {\n        ...state,\n        soundBoard: {\n          ...state.soundBoard,\n        },\n        grid: ((nextColumn === 0 && state.currentColumn > 0)\n          ? Game.generateNewGrid(state.grid, state.dimensions)\n          : state.grid),\n        currentColumn: nextColumn,\n      };\n\n\n    case RESET:\n      return {\n        ...state,\n        grid: Game.createGrid({ rows: 16, columns: 16 }),\n        currentColumn: -1,\n        soundBoard: {\n          ...state.soundBoard,\n        },\n      };\n    case MUTE:\n      volume.mute = !state.soundBoard.mute;\n      return {\n        ...state,\n        soundBoard: {\n          ...state.soundBoard,\n          mute: !state.soundBoard.mute,\n        },\n      };\n    case SPEED_DOWN:\n      clearInterval(state.interval);\n      return {\n        ...state,\n        interval: action.interval,\n      };\n    case SPEED_UP:\n      clearInterval(state.interval);\n      return {\n        ...state,\n        interval: action.interval,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import './App.css';\nimport Controls from './containers/Controls';\nimport Grid from './containers/Grid';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers/reducer';\nimport { createStore } from 'redux';\nimport { Game } from './styles/componentStyles';\n\nconst store = createStore(reducer);\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store} >\n        <Game id='majorContainer'>\n          <h1>Melody of ours</h1>\n          <p>Dibuja lo primero que se te pase por la cabeza:</p>\n          <Grid id=\"gridContainer\" />\n          <Controls />\n        </Game>\n      </Provider>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}